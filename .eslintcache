[{"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\index.js":"1","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\App.js":"2","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\reportWebVitals.js":"3","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\component\\SearchBar.js":"4","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\HomePage.js":"5","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\LogInPage.js":"6","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\SignUpPage.js":"7","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\ResPage.js":"8","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\EditPage.js":"9","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\component\\MyNav.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":3874,"mtime":1611996499406,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":6760,"mtime":1611956007651,"results":"15","hashOfConfig":"12"},{"size":1173,"mtime":1611912676295,"results":"16","hashOfConfig":"12"},{"size":2127,"mtime":1611836804896,"results":"17","hashOfConfig":"12"},{"size":273,"mtime":1611317182485,"results":"18","hashOfConfig":"12"},{"size":611,"mtime":1611955303552,"results":"19","hashOfConfig":"12"},{"size":16037,"mtime":1611918399804,"results":"20","hashOfConfig":"12"},{"size":1066,"mtime":1611610714556,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"h5otil",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\index.js",[],["49","50"],"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\App.js",["51","52"],"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\reportWebVitals.js",[],"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\component\\SearchBar.js",["53","54","55"],"import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n                languages:'hebrew',\r\n                expertis:[],\r\n                clinics:[],\r\n                location:'c'\r\n        }\r\n    }\r\n\r\n    changeOption = (event)=>{\r\n    \r\n        if( this.state[event.target.name].includes(event.target.value)){\r\n           this.setState({\r\n             [event.target.name]: this.state[event.target.name].filter((option)=>{\r\n               return option != event.target.value \r\n             })\r\n           }\r\n   \r\n           )\r\n        }\r\n        else {\r\n           this.setState({\r\n             [event.target.name]: this.state[event.target.name].concat(event.target.value)})\r\n        }\r\n         \r\n       }\r\n   \r\n       sendAndClose = () =>{\r\n         this.props.searchDiet(this.state);\r\n        //  window.location = '/#/res'\r\n       }\r\n\r\n    render(){\r\n        return(\r\n\r\n\r\n       \r\n            <Container className=\"c-search-bar\">\r\n            <Form>\r\n            <Form.Group controlId=\"formGridExpertis\">\r\n                <Form.Label>תחומי עיסוק</Form.Label>\r\n                {['checkbox'].map((type) => (\r\n                <div key={`inline-${type}`} className=\"mb-3\">\r\n                <Form.Check name=\"expertis\" inline label=\"סוכרת\" type={type} id={`inline-${type}-1`} value=\"diabetes\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"ירידה במשקל\" type={type} id={`inline-${type}-2`} value=\"weight\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"ספורט\" type={type} id={`inline-${type}-3`} value=\"sport\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\"inline label=\"בריאטריה\" type={type} id={`inline-${type}-4`} value=\"bariatrics\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"נפרולוגיה\" type={type} id={`inline-${type}-5`} value=\"nephrology\" onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"גריאטריה\" type={type} id={`inline-${type}-6`} value=\"geriatrics\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"אלרגיה\" type={type} id={`inline-${type}-7`} value=\"allergy\"  onChange={this.changeOption}/>   \r\n                <Form.Check name=\"expertis\" inline label=\"ילדים\" type={type} id={`inline-${type}-4`} value=\"kids\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"פגים\" type={type} id={`inline-${type}-5`} value=\"premature\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"הריון ופוריות\" type={type} id={`inline-${type}-6`} value=\"pregnancy\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"הנקה\" type={type} id={`inline-${type}-7`} value=\"nursing\"  onChange={this.changeOption}/> \r\n                <Form.Check name=\"expertis\" inline label=\"פסיכיאטריה\" type={type} id={`inline-${type}-8`} value=\"psychiatry\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"צמחונות- טבעונות\" type={type} id={`inline-${type}-9`} value=\"veg\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"קידום בריאות\" type={type} id={`inline-${type}-10`} value=\"promotion\"  onChange={this.changeOption}/>\r\n                <Form.Check name=\"expertis\" inline label=\"צליאק\" type={type} id={`inline-${type}-11`} value=\"celiac\"  onChange={this.changeOption}/>\r\n            \r\n            \r\n                </div>\r\n            ))}\r\n            </Form.Group>\r\n\r\n           \r\n\r\n            <Form.Group as={Col} controlId=\"formGridLanguages\">\r\n                    <Form.Label>שפה</Form.Label>\r\n                    <Form.Control value={this.state.languages} onChange={(event)=>\r\n                        {this.setState({languages:event.target.value})}} as=\"select\">\r\n                        <option value=\"hebrew\">עברית</option>\r\n                        <option value=\"english\">אנגלית</option>\r\n                        <option value=\"russian\">רוסית</option>\r\n                        <option value=\"arabic\">ערבית</option>\r\n                        <option value=\"french\">צרפתית</option>\r\n                        <option value=\"spanish\">ספרדית</option>\r\n                        <option value=\"german\">גרמנית</option>\r\n\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n\r\n\r\n            <Form.Group controlId=\"formGridClinics\">\r\n                <Form.Label>מרפאות</Form.Label>\r\n                {['checkbox'].map((type) => (\r\n                <div key={`inline-${type}`} className=\"mb-3\">\r\n                <Form.Check inline label=\"מכבי\"  type={type} id={`inline-${type}-1`}  value=\"mac\" name=\"clinics\"  onChange={this.changeOption}/>\r\n                <Form.Check inline label=\"כללית\" type={type} id={`inline-${type}-2`} value=\"clal\" name=\"clinics\"  onChange={this.changeOption}/>\r\n                <Form.Check inline label=\"מאוחדת\" type={type} id={`inline-${type}-3`} value=\"meu\" name=\"clinics\"  onChange={this.changeOption}/>\r\n                <Form.Check inline label=\"לאומית\" type={type} id={`inline-${type}-4`} value=\"leu\" name=\"clinics\"  onChange={this.changeOption}/>\r\n                <Form.Check inline label=\"פרטי\" type={type} id={`inline-${type}-5`} value=\"private\" name=\"clinics\"  onChange={this.changeOption}/>     \r\n                </div>\r\n            ))}\r\n            </Form.Group>\r\n\r\n                <Form.Group as={Col} controlId=\"formGridLocation\">\r\n                    <Form.Label>אזור</Form.Label>\r\n                    <Form.Control value={this.state.loctaion} onClick={(event)=>\r\n                        {this.setState({location:event.target.value})}} as=\"select\" defaultValue=\"מרכז\">\r\n                        <option value=\"c\">מרכז</option>\r\n                        <option value=\"n\">צפון</option>\r\n                        <option value=\"s\">דרום</option>\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    <br/>\r\n                    <Button variant=\"primary\" type=\"button\" onClick={this.sendAndClose}> \r\n                        חיפוש\r\n                    </Button>\r\n\r\n        </Form>\r\n\r\n                \r\n               \r\n            </Container>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default SearchBar;\r\n\r\n","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\HomePage.js",["56","57","58"],"import React from 'react';\r\nimport { Container, Jumbotron, Navbar } from 'react-bootstrap';\r\nimport './HomePage.css';\r\n\r\n\r\n// import MyNav from '../component/MyNav';\r\n\r\nimport SearchBar from '../component/SearchBar'\r\n\r\nclass HomePage extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                   \r\n                <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n                    <Navbar.Brand href=\"/#/edit\" className=\"ms-auto me-5\">הוספת פרטי דיאטנ.ית</Navbar.Brand>\r\n                </Navbar>\r\n                <Container>\r\n                {/* <img src=\"https://image.freepik.com/free-photo/elegant-composition-set-lemons-white-surface_24972-1113.jpg */}\r\n\r\n\r\n                    <img src=\"https://png.pngtree.com/thumb_back/fw800/back_our/20190621/ourmid/pngtree-delicious-fresh-fruit-and-vegetable-poster-banner-image_190809.jpg\"/>\r\n                    <div className=\"fruits\">\r\n                    <h1 > חפשו דיאטנים</h1>\r\n                    </div>\r\n                    \r\n\r\n                </Container> \r\n            </div>  \r\n                \r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default HomePage;","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\LogInPage.js",["59","60"],"\r\nimport React from 'react'\r\nimport {Button, Container, Form } from 'react-bootstrap';\r\nimport users from '../data/users.json'\r\n\r\nclass LogInPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            pwd:''\r\n        }\r\n    }\r\n    //i can change to .find instes loop\r\n    validateLogin = () => {\r\n        for( let i = 0; i< users.length; i++) {\r\n            // debugger\r\n            if( users[i].pwd == this.state.pwd && users[i].email == this.state.email) {\r\n                this.props.handleLogin(users[i])\r\n                let user = users[i].fname\r\n                alert(user)\r\n                window.location = '/'\r\n                return;\r\n        }\r\n        }\r\n   \r\n  \r\n        alert('user not found');\r\n        \r\n    }\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"log-in-page\">\r\n                \r\n                <Container>\r\n                    \r\n                <Form>\r\n                <h5>התחברות</h5>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>דואר אלקטרוני</Form.Label>\r\n                <Form.Control type=\"email\" \r\n                onChange={(event) => {this.setState({email: event.target.value})}} \r\n                placeholder=\"Enter email\" value={this.state.email} />\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>סיסמה</Form.Label>\r\n                <Form.Control type=\"password\"\r\n                 onChange={(event) => {this.setState({pwd: event.target.value})}} \r\n                 placeholder=\"Password\"  value={this.state.pwd}/>\r\n                </Form.Group>\r\n                <br/>\r\n                <Button onClick={this.validateLogin}  type=\"button\">\r\n                  \r\n                התחברות\r\n                </Button>\r\n                \r\n            </Form> \r\n            <br/>\r\n            <a href=\"/#/signup\">הרשמה</a>\r\n            </Container>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default LogInPage;","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\SignUpPage.js",[],"C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\ResPage.js",["61","62","63"],"import React from 'react'\r\nimport {Card, Container, CardDeck} from 'react-bootstrap'\r\nimport diet from '../data/diet.json'\r\nimport './ResPage.css'\r\n\r\nclass ResPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n    this.state={\r\n        dietCards:'' ,\r\n    }\r\n}\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <Container className=\"res-page\">\r\n               {/* <p>{this.props.result[0].languages}</p> */}\r\n              \r\n                                        <h2>I am  ResPage</h2>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default ResPage;","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\pages\\EditPage.js",["64"],"import React from 'react'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Card, Col, Container, Row } from 'react-bootstrap';\r\nimport './EditPage.css';\r\n\r\n//where to store the diet data????\r\nclass EditPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n                fname:'',\r\n                lname:'',\r\n                imgUrl:'',\r\n                email:'',\r\n                phone:'',\r\n                languages:[],\r\n                expertis:[],\r\n                clinics:[],\r\n                location:'',\r\n                id:''\r\n\r\n            \r\n        }\r\n    }\r\n    changeOption = (event)=>{\r\n    \r\n     if( this.state[event.target.name].includes(event.target.value)){\r\n        this.setState({\r\n          [event.target.name]: this.state[event.target.name].filter((option)=>{\r\n            return option != event.target.value \r\n          })\r\n        }\r\n\r\n        )\r\n     }\r\n     else {\r\n        this.setState({\r\n          [event.target.name]: this.state[event.target.name].concat(event.target.value)})\r\n     }\r\n      \r\n    }\r\n\r\n    sendAndClose = () =>{\r\n      this.props.addDiet(this.state);\r\n      window.location = '/'\r\n    }\r\n    render(){\r\n        return(\r\n            <Container >\r\n                <Card className=\"mt-4\">\r\n                {/* <Card border=\"secondary\" style={{ width: '40rem' }}> */}\r\n                    <Card.Header >\r\n                    <h5 className=\"card-title\">פרטי דיאטנ.ית</h5></Card.Header>\r\n                    <Card.Body>\r\n\r\n            <Form >\r\n\r\n    <Row>\r\n        <Col>\r\n        <Form.Label>שם פרטי</Form.Label>\r\n        <Form.Control placeholder=\"ְשם פרטי\" value={this.state.fname} \r\n        onChange={(event)=> this.setState({fname : event.target.value})} />\r\n        </Col>\r\n        <Col>\r\n        <Form.Label>שם משפחה</Form.Label>\r\n        <Form.Control placeholder=\"שם משפחה\" value={this.state.lname} \r\n        onChange={(event)=> this.setState({lname : event.target.value})}/>\r\n        </Col>\r\n    </Row>\r\n\r\n\r\n    {/* <Form.Row>\r\n        <Form.Group as={Col} controlId=\"formGridFName\">\r\n        <Form.Label>שם פרטי</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter name\" />\r\n        </Form.Group>\r\n        <Form.Group as={Col} controlId=\"formGridLName\">\r\n        <Form.Label>שם משפחה</Form.Label>\r\n        <Form.Control type=\"text\" placeholder=\"Enter name\" />\r\n        </Form.Group>\r\n    </Form.Row> */}\r\n    \r\n    <Form.Row>\r\n      <Form.Label>תמונה</Form.Label>\r\n      <Form.Control type=\"text\" value={this.state.imgUrl} \r\n        onChange={(event)=> this.setState({imgUrl : event.target.value})} />\r\n    </Form.Row>\r\n\r\n  <Form.Row>\r\n    <Form.Group as={Col} controlId=\"formGridEmail\">\r\n      <Form.Label>Email</Form.Label>\r\n      <Form.Control type=\"email\" placeholder=\"Enter email\" value={this.state.email} \r\n        onChange={(event)=> this.setState({email : event.target.value})}/>\r\n    </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridPhone\">\r\n      <Form.Label>טלפון</Form.Label>\r\n      <Form.Control type=\"text\"  value={this.state.phone} \r\n        onChange={(event)=> this.setState({phone : event.target.value})}/>\r\n    </Form.Group>\r\n  </Form.Row>\r\n  \r\n  {/* <Row>\r\n        <Col>\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control placeholder=\"\" />\r\n        </Col>\r\n        <Col>\r\n        <Form.Label>טלפון</Form.Label>\r\n        <Form.Control placeholder=\"ספרות בלבד\" />\r\n        </Col>\r\n    </Row> */}\r\n\r\n  {/* <Form.Group controlId=\"formGridLanguages\">\r\n    <Form.Label>שפות</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check inline label=\"עברית\"  type={type} id={`inline-${type}-1`} value=\"hebrew\" name=\"languages\" checked={this.state.languages.includes(\"hebrew\")} onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"אנגלית\" type={type} id={`inline-${type}-2`} value=\"english\" name=\"languages\" checked={this.state.languages.includes(\"english\")} onChange={this.changeLang}/>\r\n      <Form.Check inline label=\"רוסית\" type={type} id={`inline-${type}-3`} value=\"russian\" name=\"languages\" checked={this.state.languages.includes(\"russian\")} onChange={this.changeLang}/>\r\n      <Form.Check inline label=\"ערבית\" type={type} id={`inline-${type}-4`} value=\"arabic\" name=\"languages\" checked={this.state.languages.includes(\"arabic\")} onChange={this.changeLang}/>\r\n      <Form.Check inline label=\"צרפתית\" type={type} id={`inline-${type}-5`} value=\"french\" name=\"languages\" checked={this.state.languages.includes(\"french\")} onChange={this.changeLang}/>\r\n      <Form.Check inline label=\"ספרדית\" type={type} id={`inline-${type}-6`} value=\"spanish\" name=\"languages\" checked={this.state.languages.includes(\"spanish\")} onChange={this.changeLang}/>\r\n      <Form.Check inline label=\"גרמנית\" type={type} id={`inline-${type}-7`} value=\"german\" name=\"languages\" checked={this.state.languages.includes(\"german\")} onChange={this.changeLang}/>      \r\n    </div>\r\n  ))}\r\n  </Form.Group> */}\r\n\r\n  <Form.Group controlId=\"formGridLanguages\">\r\n    <Form.Label>שפות</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check inline label=\"עברית\"  type={type} id={`inline-${type}-1`} value=\"hebrew\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"אנגלית\" type={type} id={`inline-${type}-2`} value=\"english\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"רוסית\" type={type} id={`inline-${type}-3`} value=\"russian\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"ערבית\" type={type} id={`inline-${type}-4`} value=\"arabic\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"צרפתית\" type={type} id={`inline-${type}-5`} value=\"french\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"ספרדית\" type={type} id={`inline-${type}-6`} value=\"spanish\" name=\"languages\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"גרמנית\" type={type} id={`inline-${type}-7`} value=\"german\" name=\"languages\"  onChange={this.changeOption}/>     \r\n    </div>\r\n  ))}\r\n  </Form.Group>\r\n\r\n  {/* <Form.Group controlId=\"formGridExpertis\">\r\n    <Form.Label>תחומי עיסוק</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check name=\"expertis\" inline label=\"סוכרת\" type={type} id={`inline-${type}-1`} value=\"diabetes\" checked={this.state.languages.includes(\"diabetes\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"ירידה במשקל\" type={type} id={`inline-${type}-2`} value=\"weight\" checked={this.state.languages.includes(\"weight\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"ספורט\" type={type} id={`inline-${type}-3`} value=\"sport\" checked={this.state.languages.includes(\"sport\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\"inline label=\"בריאטריה\" type={type} id={`inline-${type}-4`} value=\"bariatrics\" checked={this.state.languages.includes(\"bariatrics\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"נפרולוגיה\" type={type} id={`inline-${type}-5`} value=\"nephrology\" checked={this.state.languages.includes(\"nephrology\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"גריאטריה\" type={type} id={`inline-${type}-6`} value=\"geriatrics\" checked={this.state.languages.includes(\"geriatrics\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"אלרגיה\" type={type} id={`inline-${type}-7`} value=\"allergy\" checked={this.state.languages.includes(\"allergy\")} onChange={this.changeOption}/>   \r\n      <Form.Check name=\"expertis\" inline label=\"ילדים\" type={type} id={`inline-${type}-4`} value=\"kids\" checked={this.state.languages.includes(\"kids\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"פגים\" type={type} id={`inline-${type}-5`} value=\"premature\" checked={this.state.languages.includes(\"premature\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"הריון ופוריות\" type={type} id={`inline-${type}-6`} value=\"pregnancy\" checked={this.state.languages.includes(\"pregnancy\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"הנקה\" type={type} id={`inline-${type}-7`} value=\"nursing\" checked={this.state.languages.includes(\"nursing\")} onChange={this.changeOption}/> \r\n      <Form.Check name=\"expertis\" inline label=\"פסיכיאטריה\" type={type} id={`inline-${type}-8`} value=\"psychiatry\" checked={this.state.languages.includes(\"psychiatry\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"צמחונות- טבעונות\" type={type} id={`inline-${type}-9`} value=\"veg\" checked={this.state.languages.includes(\"veg\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"קידום בריאות\" type={type} id={`inline-${type}-10`} value=\"promotion\" checked={this.state.languages.includes(\"promotion\")} onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"צליאק\" type={type} id={`inline-${type}-11`} value=\"celiac\" checked={this.state.languages.includes(\"celiac\")} onChange={this.changeOption}/>\r\n  \r\n \r\n    </div>\r\n  ))}\r\n  </Form.Group> */}\r\n\r\n  <Form.Group controlId=\"formGridExpertis\">\r\n    <Form.Label>תחומי עיסוק</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check name=\"expertis\" inline label=\"סוכרת\" type={type} id={`inline-${type}-1`} value=\"diabetes\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"ירידה במשקל\" type={type} id={`inline-${type}-2`} value=\"weight\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"ספורט\" type={type} id={`inline-${type}-3`} value=\"sport\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\"inline label=\"בריאטריה\" type={type} id={`inline-${type}-4`} value=\"bariatrics\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"נפרולוגיה\" type={type} id={`inline-${type}-5`} value=\"nephrology\" onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"גריאטריה\" type={type} id={`inline-${type}-6`} value=\"geriatrics\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"אלרגיה\" type={type} id={`inline-${type}-7`} value=\"allergy\"  onChange={this.changeOption}/>   \r\n      <Form.Check name=\"expertis\" inline label=\"ילדים\" type={type} id={`inline-${type}-4`} value=\"kids\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"פגים\" type={type} id={`inline-${type}-5`} value=\"premature\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"הריון ופוריות\" type={type} id={`inline-${type}-6`} value=\"pregnancy\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"הנקה\" type={type} id={`inline-${type}-7`} value=\"nursing\"  onChange={this.changeOption}/> \r\n      <Form.Check name=\"expertis\" inline label=\"פסיכיאטריה\" type={type} id={`inline-${type}-8`} value=\"psychiatry\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"צמחונות- טבעונות\" type={type} id={`inline-${type}-9`} value=\"veg\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"קידום בריאות\" type={type} id={`inline-${type}-10`} value=\"promotion\"  onChange={this.changeOption}/>\r\n      <Form.Check name=\"expertis\" inline label=\"צליאק\" type={type} id={`inline-${type}-11`} value=\"celiac\"  onChange={this.changeOption}/>\r\n  \r\n \r\n    </div>\r\n  ))}\r\n  </Form.Group>\r\n\r\n  {/* <Form.Group controlId=\"formGridClinics\">\r\n    <Form.Label>מרפאות</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check inline label=\"מכבי\"  type={type} id={`inline-${type}-1`}  value=\"mac\" name=\"clinics\" checked={this.state.languages.includes(\"mac\")} onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"כללית\" type={type} id={`inline-${type}-2`} value=\"clal\" name=\"clinics\" checked={this.state.languages.includes(\"clal\")} onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"מאוחדת\" type={type} id={`inline-${type}-3`} value=\"meu\" name=\"clinics\" checked={this.state.languages.includes(\"meu\")} onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"לאומית\" type={type} id={`inline-${type}-4`} value=\"leu\" name=\"clinics\" checked={this.state.languages.includes(\"leu\")} onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"פרטי\" type={type} id={`inline-${type}-5`} value=\"private\" name=\"clinics\" checked={this.state.languages.includes(\"private\")} onChange={this.changeOption}/>     \r\n    </div>\r\n  ))}\r\n  </Form.Group> */}\r\n\r\n<Form.Group controlId=\"formGridClinics\">\r\n    <Form.Label>מרפאות</Form.Label>\r\n    {['checkbox'].map((type) => (\r\n    <div key={`inline-${type}`} className=\"mb-3\">\r\n      <Form.Check inline label=\"מכבי\"  type={type} id={`inline-${type}-1`}  value=\"mac\" name=\"clinics\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"כללית\" type={type} id={`inline-${type}-2`} value=\"clal\" name=\"clinics\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"מאוחדת\" type={type} id={`inline-${type}-3`} value=\"meu\" name=\"clinics\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"לאומית\" type={type} id={`inline-${type}-4`} value=\"leu\" name=\"clinics\"  onChange={this.changeOption}/>\r\n      <Form.Check inline label=\"פרטי\" type={type} id={`inline-${type}-5`} value=\"private\" name=\"clinics\"  onChange={this.changeOption}/>     \r\n    </div>\r\n  ))}\r\n  </Form.Group>\r\n\r\n    <Form.Group as={Col} controlId=\"formGridLocation\">\r\n      <Form.Label>אזור</Form.Label>\r\n      <Form.Control value={this.state.loctaion} onClick={(event)=>\r\n        {this.setState({location:event.target.value})}} as=\"select\" defaultValue=\"בחר אזור\">\r\n        <option value=\"c\">מרכז</option>\r\n        <option value=\"n\">צפון</option>\r\n        <option value=\"s\">דרום</option>\r\n      </Form.Control>\r\n    </Form.Group>\r\n    <br/>\r\n    <Button variant=\"primary\" type=\"button\" onClick={this.sendAndClose}> \r\n        שליחה\r\n    </Button>\r\n\r\n</Form>\r\n</Card.Body>\r\n</Card>\r\n\r\n\r\n</Container>\r\n\r\n            // <div className=\"edit-page\">\r\n            //     <Form>\r\n            //     <Form.Group controlId=\"formBasicEmail\">\r\n            //         <Form.Label>Email address</Form.Label>\r\n            //         <Form.Control type=\"email\" placeholder=\"Enter email\" />\r\n            //         <Form.Text className=\"text-muted\">\r\n            //         We'll never share your email with anyone else.\r\n            //         </Form.Text>\r\n            //     </Form.Group>\r\n\r\n            //     <Form.Group controlId=\"formBasicPassword\">\r\n            //         <Form.Label>Password</Form.Label>\r\n            //         <Form.Control type=\"password\" placeholder=\"Password\" />\r\n            //     </Form.Group>\r\n            //     <Form.Group controlId=\"formBasicCheckbox\">\r\n            //         <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n            //     </Form.Group>\r\n            //     <Button variant=\"primary\" type=\"submit\">\r\n            //         Submit\r\n            //     </Button>\r\n            //     </Form>\r\n            //     <h2>I am  EditPage</h2>\r\n            // </div>\r\n        )\r\n    }\r\n        \r\n}\r\n\r\nexport default EditPage;","C:\\Users\\Tamar\\Desktop\\קורס\\Project\\d-locate\\src\\component\\MyNav.js",["65"],"import React from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport './MyNav.css';\r\n\r\n\r\n\r\nconst MyNav = function(props) {\r\n    const {activeUser, handleLogout} = props;\r\n\r\n    const loginEl = ( ! activeUser)  ?  <Nav.Link href=\"/#/login\">התחברות</Nav.Link>  : null;\r\n    const signupEl = ( ! activeUser) ?  <Nav.Link href=\"/#/signup\">הרשמה</Nav.Link>  : null;\r\n    const logoutEl = (activeUser) ?  <Nav.Link className=\"ms-auto me-4\"  onClick={handleLogout}>החלפת משתמש.ת</Nav.Link> : null;\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n  <Navbar.Brand href=\"/\" ><img className=\" m-1 logo-img\" \r\n  src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRhqQzAiqSS8vODDcDKMSKR8NxAodZHXvbhFqg-g7Rohmv6xililUUPW3ZvVxTet19UhuyVZBU&usqp=CAc\"/>\r\n  {activeUser ?  ' '+ activeUser.fname : ''}\r\n  </Navbar.Brand>\r\n  \r\n\r\n  <Nav className=\"w-100\">\r\n      \r\n        {loginEl}\r\n        {signupEl}\r\n        {logoutEl}\r\n        \r\n        \r\n             \r\n    </Nav>\r\n    \r\n    \r\n</Navbar>\r\n    )\r\n}\r\nexport default MyNav;\r\n\r\n\r\n\r\n\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":11,"column":8,"nodeType":"72","messageId":"73","endLine":11,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":12,"column":10,"nodeType":"72","messageId":"73","endLine":12,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":4,"column":10,"nodeType":"72","messageId":"73","endLine":4,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":4,"column":32,"nodeType":"72","messageId":"73","endLine":4,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":22,"column":30,"nodeType":"79","messageId":"80","endLine":22,"endColumn":32},{"ruleId":"70","severity":1,"message":"81","line":2,"column":21,"nodeType":"72","messageId":"73","endLine":2,"endColumn":30},{"ruleId":"70","severity":1,"message":"82","line":8,"column":8,"nodeType":"72","messageId":"73","endLine":8,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":22,"column":21,"nodeType":"85","endLine":22,"endColumn":174},{"ruleId":"77","severity":1,"message":"86","line":18,"column":30,"nodeType":"79","messageId":"80","endLine":18,"endColumn":32},{"ruleId":"77","severity":1,"message":"86","line":18,"column":66,"nodeType":"79","messageId":"80","endLine":18,"endColumn":68},{"ruleId":"70","severity":1,"message":"75","line":2,"column":9,"nodeType":"72","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"70","severity":1,"message":"87","line":2,"column":26,"nodeType":"72","messageId":"73","endLine":2,"endColumn":34},{"ruleId":"70","severity":1,"message":"88","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":32,"column":27,"nodeType":"79","messageId":"80","endLine":32,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":15,"column":27,"nodeType":"85","endLine":16,"endColumn":147},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'MyNav' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Card' is defined but never used.","'Row' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Jumbotron' is defined but never used.","'SearchBar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","'CardDeck' is defined but never used.","'diet' is defined but never used.","no-global-assign","no-unsafe-negation"]